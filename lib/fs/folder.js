// Generated by CoffeeScript 1.12.6

/*
 * Folder reading wrapper
 */

(function() {
  'use strict';
  var core, errorReport;

  core = require('./folder_core');

  errorReport = require('../common/error_report');

  module.exports = {
    isFolder: core.isFolder,
    read: function(title, dir, recursive) {
      var e, files, i, j, methodList, names, ref;
      dir = core.getDir(dir);
      try {
        files = core.getFiles(dir, recursive);
      } catch (error) {
        e = error;
        files = dir;
      }
      if (errorReport.toTestEngine(core.errors, [title, dir, files])) {
        return false;
      }
      files = files.map(function(filename) {
        var method, ref;
        ref = filename.split('.'), method = ref[0];
        return method;
      });
      names = files.map(function(filePath) {
        return filePath.split('/').join('.');
      });
      files = files.map(function(filename) {
        return dir + "/" + filename;
      });
      methodList = {};
      for (i = j = 0, ref = names.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        methodList[names[i]] = files[i];
      }
      return methodList;
    }
  };

}).call(this);
