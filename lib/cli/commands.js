// Generated by CoffeeScript 1.12.3

/*
 * Command line interface commands
 */

(function() {
  'use strict';
  var c, error, folder, helpers, object;

  c = require('../common/colors');

  error = require('./error');

  helpers = require('./helpers');

  folder = require('../fs/folder');

  object = require('../common/object');

  module.exports = {
    cliScope: helpers.cliScope,
    exit: helpers.exit,
    load: helpers.load,
    save: helpers.save,
    setPrefix: helpers.setPrefix,
    config: function() {
      var config, configFunction, configPath, moduleTitles, params, ref;
      ref = helpers.fetchConfig(arguments), config = ref[0], configPath = ref[1], params = ref[2];
      configFunction = require(configPath);
      moduleTitles = config.moduleTitles;
      config = configFunction.apply(configFunction, params);
      config.moduleTitles = moduleTitles || helpers.moduleTitles(config);
      config = object.merge(config, {
        cli: {
          config: {
            path: configPath,
            params: params
          }
        }
      });
      return helpers.save(config);
    },
    init: function(code, spec, title) {
      var config;
      code = helpers.stripSlash(code);
      if (!folder.isFolder(code)) {
        return error("Specified code folder {c.bright code} does not exist.");
      }
      spec = helpers.stripSlash(spec);
      config = {
        title: title || code,
        code: code,
        spec: spec
      };
      config.moduleTitles = helpers.moduleTitles(config);
      return helpers.save(config);
    },
    titles: function() {
      var config;
      config = helpers.load();
      if (typeof config.code !== 'string') {
        return error("Code folder definition missing");
      }
      config.moduleTitles = helpers.moduleTitles(config);
      return helpers.save(config);
    }
  };

}).call(this);
