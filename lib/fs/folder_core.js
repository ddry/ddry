// Generated by CoffeeScript 2.4.1
(function() {
  /*
   * Folder reading core
   */
  'use strict';
  var fs, path;

  fs = require('fs');

  path = require('path');

  module.exports = {
    errors: {
      order: ['pathError', 'folderEmpty'],
      detectors: {
        pathError: function(title, path, files) {
          if (typeof files === 'string') {
            return [title, files];
          }
          return false;
        },
        folderEmpty: function(title, path, files) {
          if (!files.length) {
            return [title, path];
          }
          return false;
        }
      },
      messages: {
        pathError: function(title, path) {
          return {
            title: `Module '${title}' folder missing`,
            messages: [`Directory '${path}' does not exist.`]
          };
        },
        folderEmpty: function(title, path) {
          return {
            title: `Module '${title}' folder empty`,
            messages: [`No files found in '${path}'.`]
          };
        }
      }
    },
    isFolder: function(dir) {
      var e, folder;
      try {
        folder = fs.statSync(path.join(dir)).isDirectory();
      } catch (error) {
        e = error;
        folder = false;
      }
      return folder;
    },
    getFiles: function(dir, recursive) {
      var _;
      return _ = recursive ? this.getFilesRecursively(dir) : fs.readdirSync(dir).filter(function(file) {
        return fs.statSync(path.join(dir, file)).isFile();
      });
    },
    getFilesRecursively: function(dir) {
      var _, files;
      files = this.walkSync(dir, []);
      return _ = files.map(function(filename) {
        return filename.replace(`${dir}/`, '');
      });
    },
    walkSync: function(dir, filelist = []) {
      var file, files, i, len;
      files = fs.readdirSync(dir);
      for (i = 0, len = files.length; i < len; i++) {
        file = files[i];
        if (fs.statSync(path.join(dir, file)).isDirectory()) {
          filelist = this.walkSync(path.join(dir, file), filelist);
        } else {
          filelist.push(path.join(dir, file));
        }
      }
      return filelist;
    },
    getDir: function(dir) {
      if (fs.existsSync(dir)) {
        return dir;
      }
      return `node_modules/${dir}`;
    }
  };

}).call(this);
