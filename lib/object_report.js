// Generated by CoffeeScript 1.12.3
(function() {
  'use strict';
  module.exports = {
    create: function(object, baseKey, report) {
      var finalKey, finalValue, key, value;
      if (baseKey == null) {
        baseKey = [];
      }
      if (report == null) {
        report = [];
      }
      for (key in object) {
        value = object[key];
        if (this.validObject(value)) {
          baseKey.push(key);
          report = this.create(value, baseKey, report);
        } else {
          finalValue = {};
          finalKey = baseKey.slice(0);
          finalKey.push(key);
          finalValue[finalKey.join('.')] = this.format(value);
          report.push(finalValue);
        }
      }
      return report;
    },
    format: function(value) {
      var definition;
      if (typeof value === 'function') {
        definition = ("" + value).replace(/ /g, '');
        return definition.replace(/__cov_[^\+]*\+\+;/g, '');
      }
      return "" + value;
    },
    validObject: function(value) {
      if (!(value && typeof value === 'object')) {
        return false;
      }
      if (Array.isArray(value)) {
        if (!this.containsObjects(value)) {
          return false;
        }
      }
      if (!Object.keys(value).length) {
        return false;
      }
      return true;
    },
    containsObjects: function(value) {
      var element, i, len;
      for (i = 0, len = value.length; i < len; i++) {
        element = value[i];
        if (element && typeof element === 'object') {
          return true;
        }
      }
      return false;
    }
  };

}).call(this);
