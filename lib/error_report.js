// Generated by CoffeeScript 1.12.3
(function() {
  'use strict';
  var testEngine;

  testEngine = require('./test_engine');

  module.exports = {
    toTestEngine: function(errorHash, paramsArray) {
      var errorReport;
      errorReport = this.detectErrors(errorHash, paramsArray);
      if (errorReport.length) {
        testEngine.report(errorReport);
        return true;
      }
      return false;
    },
    detectErrors: function(errorHash, paramsArray) {
      var names, ordered;
      ordered = !!errorHash.order;
      names = ordered ? errorHash.order : Object.keys(errorHash.detectors);
      return this.process(errorHash, paramsArray, names, ordered);
    },
    process: function(errorHash, paramsArray, names, ordered) {
      var errorReport, gotError, i, len, name, reportStatement;
      errorReport = [];
      for (i = 0, len = names.length; i < len; i++) {
        name = names[i];
        gotError = errorHash.detectors[name].apply(null, paramsArray);
        if (gotError) {
          reportStatement = errorHash.messages[name].apply(null, gotError);
          errorReport.push(reportStatement);
          if (ordered) {
            return errorReport;
          }
        }
      }
      return errorReport;
    }
  };

}).call(this);
