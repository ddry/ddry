// Generated by CoffeeScript 1.12.3
(function() {
  'use strict';
  module.exports = {
    context: {
      toMocha: function(title, specs) {
        return describe(title, specs);
      },
      toTape: function(title, specs) {
        console.log("\x1b[0m" + title);
        return specs();
      }
    },
    modular: {
      toMocha: function(title, specs) {
        console.log("\n\n" + title + " \x1b[32mdd\x1b[34mry\x1b[0m modular spec");
        return specs();
      },
      toTape: function(title, specs) {
        return specs();
      }
    },
    report: {
      toMocha: function(report) {
        var i, len, results, statement;
        results = [];
        for (i = 0, len = report.length; i < len; i++) {
          statement = report[i];
          results.push(describe(statement.title, function() {
            var j, len1, messages, ref, results1;
            ref = statement.messages;
            results1 = [];
            for (j = 0, len1 = ref.length; j < len1; j++) {
              messages = ref[j];
              results1.push(it(messages));
            }
            return results1;
          }));
        }
        return results;
      },
      toTape: function(report) {
        var i, len, messages, results, statement;
        console.log(" \n \n");
        results = [];
        for (i = 0, len = report.length; i < len; i++) {
          statement = report[i];
          console.log("\x1b[0m" + statement.title);
          results.push((function() {
            var j, len1, ref, results1;
            ref = statement.messages;
            results1 = [];
            for (j = 0, len1 = ref.length; j < len1; j++) {
              messages = ref[j];
              results1.push(console.log("  \x1b[36m- " + messages + "\x1b[0m"));
            }
            return results1;
          })());
        }
        return results;
      }
    }
  };

}).call(this);
