// Generated by CoffeeScript 1.12.6

/*
 * Modular spec attachments processing
 */

(function() {
  'use strict';
  var folders, object, requireSafe;

  object = require('../common/object');

  folders = require('./folders');

  requireSafe = require('../fs/require_safe');

  module.exports = {
    helper: function(helper) {
      var Helper;
      if (!(helper && typeof helper === 'object')) {
        return false;
      }
      if (typeof helper.path !== 'string') {
        return false;
      }
      if (!Array.isArray(helper.initial)) {
        return false;
      }
      Helper = requireSafe(helper.path);
      if (typeof Helper !== 'function') {
        return false;
      }
      return object.construct(Helper, helper.initial);
    },
    matchers: function(pathsArray) {
      var i, len, matcher, matcherPath, matchers;
      matchers = {};
      for (i = 0, len = pathsArray.length; i < len; i++) {
        matcherPath = pathsArray[i];
        matcher = requireSafe(matcherPath);
        if (matcher) {
          object.extend(matchers, matcher);
        }
      }
      return matchers;
    },
    outside: function(codeModules, params) {
      var name, outside, outsidePath, ref;
      if (!(params.outside && typeof params.outside === 'object')) {
        return codeModules;
      }
      ref = params.outside;
      for (name in ref) {
        outsidePath = ref[name];
        outside = folders.outside(name, outsidePath);
        object.extend(codeModules, outside);
      }
      return codeModules;
    }
  };

}).call(this);
