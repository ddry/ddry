// Generated by CoffeeScript 1.12.3
(function() {
  'use strict';
  module.exports = function(dd) {
    var params, sequence, singleSequence, valuesSequence;
    singleSequence = {
      it: dd.helper.message,
      data: [
        {
          i: [],
          e: void 0
        }
      ],
      from: 1
    };
    params = {
      it: dd.helper.message,
      matcher: 'default',
      mochaMethod: 'it'
    };
    dd.drive({
      it: 'collects assertion data of single fixture',
      i: [singleSequence, 1, params],
      e: {
        matcher: 'default',
        message: 'returns undefined for ',
        mochaMethod: 'it',
        it: dd.helper.message,
        input: [],
        expected: void 0
      }
    });
    sequence = {
      it: dd.helper.message,
      from: 1,
      data: [
        {
          i: [],
          e: true
        }, {
          i: {
            'empty input': []
          },
          e: {
            'cool output': void 0
          }
        }, {
          i: [],
          e: false
        }
      ]
    };
    dd.drive({
      it: 'collects assertion data by given index of sequence',
      i: [sequence, 2, params],
      e: {
        matcher: 'default',
        message: 'returns cool output for empty input',
        mochaMethod: 'it',
        it: dd.helper.message,
        input: [],
        expected: void 0
      }
    });
    valuesSequence = {
      it: dd.helper.message,
      data: ['20th', '21st', '22nd', '23rd'],
      from: 20
    };
    return dd.drive({
      it: 'fallbacks to index if no input given',
      i: [valuesSequence, 22, params],
      e: {
        matcher: 'default',
        message: 'returns 22nd for 22',
        mochaMethod: 'it',
        it: dd.helper.message,
        input: [22],
        expected: '22nd'
      }
    });
  };

}).call(this);
