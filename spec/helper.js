// Generated by CoffeeScript 1.12.3
(function() {
  'use strict';
  var SpecHelper;

  SpecHelper = function(harness, subject, relative) {
    var common, i, len, name, ref, tape;
    this.prefix = relative;
    this.dataDriven = require(subject + "index");
    this.methodContext = require(subject + "lib/method_context");
    this.requireSafe = require(subject + "lib/require_safe");
    common = require(subject + "lib/common");
    common.mergeHashes(this, common);
    if (this.forMocha()) {
      this.tapeRunner = require(subject + "lib/tape_runner");
      tape = require('tape');
      tape.createStream({
        objectMode: true
      }).on('data', function(row) {
        return false;
      });
      tape.test('cover', function(t) {
        t.deepEqual(1, 1);
        return t.end();
      });
    }
    this.requireSafe({
      prefix: this.prefix
    });
    this.examples = {};
    ref = ['function_export', 'instance', 'numbering', 'numbering_rewrite', 'properties'];
    for (i = 0, len = ref.length; i < len; i++) {
      name = ref[i];
      this.examples[name] = this.requireSafe("spec/examples/code/lib/" + name);
    }
    this.ddry();
    return true;
  };

  SpecHelper.prototype.ddry = function(path) {
    var DataDriven, ddry;
    if (path == null) {
      path = '';
    }
    DataDriven = this.dataDriven;
    ddry = new DataDriven(path);
    ddry.module({
      prefix: this.prefix
    });
    ddry.muteOutput();
    return ddry;
  };

  SpecHelper.prototype.tapeStub = require('assert');

  SpecHelper.prototype.f = function() {
    return 1;
  };

  SpecHelper.prototype.ff = function() {
    return 2;
  };

  module.exports = SpecHelper;

}).call(this);
