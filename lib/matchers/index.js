// Generated by CoffeeScript 1.12.3

/*
 * Default matchers set
 */

(function() {
  'use strict';
  var dotted, getActual, report, unordered;

  dotted = require('../common/dotted');

  getActual = require('./get_actual');

  report = require('../common/object/report').create;

  unordered = require('../common/unordered');

  module.exports = {
    "default": function(spec, specSet) {
      var _;
      return _ = {
        actual: getActual(spec, specSet),
        expected: spec.expected
      };
    },
    anyOrder: function(spec, specSet) {
      var _, actual;
      actual = getActual(spec, specSet);
      return _ = {
        actual: unordered.compare(actual, spec.expected),
        expected: unordered.clean
      };
    },
    contains: function(spec, specSet) {
      var _, actual, expected;
      actual = getActual(spec, specSet);
      actual = report(actual);
      expected = report(spec.expected);
      return _ = {
        actual: unordered.compare(actual, expected).extra,
        expected: []
      };
    },
    error: function(spec, specSet) {
      var _, actual, e;
      try {
        actual = getActual(spec, specSet);
      } catch (error) {
        e = error;
        actual = e.message;
      }
      return _ = {
        actual: actual,
        expected: spec.expected
      };
    },
    plain: function(spec, specSet) {
      var _;
      return _ = {
        actual: spec.input,
        expected: spec.expected
      };
    },
    property: function(spec, specSet) {
      var _, actual, key, ref, value;
      getActual(spec, specSet);
      actual = {};
      ref = spec.expected;
      for (key in ref) {
        value = ref[key];
        actual[key] = dotted.parse(specSet.that, key);
      }
      return _ = {
        actual: actual,
        expected: spec.expected
      };
    }
  };

}).call(this);
